<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzw.mapper.CourseMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yzw.domain.Course">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="users" property="users" />
        <result column="course_type_id" property="courseTypeId" />
        <result column="grade" property="grade" />
        <result column="status" property="status" />
        <result column="tenant_id" property="tenantId" />
        <result column="tenantName" property="tenantName" />
        <result column="user_id" property="userId" />
        <result column="userName" property="userName" />
        <result column="start_time" property="startTime" />
        <result column="end_time" property="endTime" />
    </resultMap>
    <sql id="whereSql">
        <where>
            <if test="query.keyword!=null and query.keyword!=''">
                and (
                tc.name like concat('%',#{query.keyword},'%') or
                tc.users like concat('%',#{query.keyword},'%') or
                tc.tenantName like concat('%',#{query.keyword},'%') or
                tc.userName like concat('%',#{query.keyword},'%')
                )
            </if>
        </where>
    </sql>
    <!--void selectListPage(Page<Course> page, CourseQuery query);-->
    <select id="selectListPage" parameterType="CourseQuery" resultMap="CourseMap">
        SELECT tc.*,tcp.id tid,tcp.`name` tName from t_course tc 
        LEFT JOIN t_course_type tcp ON tc.course_type_id=tcp.id
        <include refid="whereSql"></include>
    </select>
    <resultMap id="CourseMap" type="Course">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="users" property="users" />
        <result column="course_type_id" property="courseTypeId" />
        <result column="grade" property="grade" />
        <result column="status" property="status" />
        <result column="tenant_id" property="tenantId" />
        <result column="tenantName" property="tenantName" />
        <result column="user_id" property="userId" />
        <result column="userName" property="userName" />
        <result column="start_time" property="startTime" />
        <result column="end_time" property="endTime" />
        <association property="courseType" javaType="CourseType">
            <id column="tid" property="id" />
            <result column="tName" property="name" />
        </association>
    </resultMap>
    <!--void batchOnline(ArrayList<Map<String, Object>> idsMap);-->
    <update id="batchOnline" parameterType="list" >
        update t_course set status=1,start_time=now() where id in
        <foreach collection="list" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </update>
    <!--void batchOffline(ArrayList<Map<String, Object>> idsMap);-->
    <update id="batchOffline" parameterType="list" >
        update t_course set status=0,end_time=now() where id in
        <foreach collection="list" open="(" close=")" item="item" separator=",">
            #{item}
        </foreach>
    </update>
</mapper>
